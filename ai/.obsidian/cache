{"files":{"Matplotlib.md":{"mtime":1594350242704.6812,"size":2288,"hash":"2ef33a07510610acfbfd94841aecc196dfe3608b81c9d8b869cebfeb390d4612"},"Numpy.md":{"mtime":1594273052147.2139,"size":4133,"hash":"a48d10b538b5309737aeafc824f8ba53cc6db2a60092e0a0eb4c008601a74154"},"Pillow.md":{"mtime":1594273050793.838,"size":3674,"hash":"6c459ec520012f4dfb5d3d534b072fc66bc8ab17d0c19542c2270633db8abf95"},"Tensorflow2.0.md":{"mtime":1595343763263.464,"size":5161,"hash":"3b3728b97c2d1d66ce584180bffe7d7d82a0f1a9ddf5a057ebea7296f9786416"},"编码原理记录.md":{"mtime":1594476879920.9983,"size":32,"hash":"d129fefa501c916eb9efb0193a4a41c45ddac8d57ced420d1974d49bb83c78d3"},"梯度下降算法.md":{"mtime":1595319103743.1975,"size":1118,"hash":"04fc91484f6e8c317c15c1d1fa37786f9086ca1f95b431445da53136b755ffcd"},"线性回归.md":{"mtime":1596811159525.5833,"size":876,"hash":"ed4d83c0bf7afc701c7915e9b5f20a503f23dedfd18731895c8c91b7d0a764c4"},"逻辑回归分类问题.md":{"mtime":1596807640313.6787,"size":1410,"hash":"dd11f6725f07f91928e99d6ed393112a42c42f7727bff87b4f822f625ec5d19e"},"第一个逻辑回归程序.md":{"mtime":1596812832915.2644,"size":1122,"hash":"90ef052b125fe9a2b7e1608af9077fb855b2f9a52d374e6c9c8c4457d6946ff3"}},"metadata":{"6c459ec520012f4dfb5d3d534b072fc66bc8ab17d0c19542c2270633db8abf95":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"数字图像","level":1},{"line":4,"heading":"色彩深度（位深度）来区分","level":3},{"line":6,"heading":"二值图像（位深度为2）只有黑白两种颜色（或者说只有两种颜色）。","level":5},{"line":8,"heading":"灰度图像（位深度为8，一个字节）可以表示0-255的不同亮度的颜色，0为黑色，255为亮度最大的某种颜色。","level":5},{"line":10,"heading":"彩色图像（位深度为24）可以理解为有三种灰度图像组合（RGB）","level":5},{"line":12,"heading":"RGBA图像（位深度32）RGB图像+8位的透明度Alpha，Alpha=0时图像完全透明。","level":5},{"line":14,"heading":"256色图像（位深度为8），每个像素是调色板的索引值，保存该种图片是需要将调色板一同保存。","level":5},{"line":16,"heading":"其他色彩格式","level":3},{"line":18,"heading":"CMYK-印刷四分色 C：青色          M：洋红色         Y: 黄色      K:   黑色","level":5},{"line":20,"heading":"YCbCr   Y:亮度        Cb: 蓝色色度        Cr： 红色色度","level":5},{"line":22,"heading":"HSI    H: 色调   S: 饱和度   I:亮度","level":5},{"line":24,"heading":"图像格式","level":2},{"line":26,"heading":"BBP格式：不支持文件压缩，空间大","level":5},{"line":28,"heading":"JEGP 有损压缩 压缩率高 空间小 适用于颜色丰富，细节细腻的图像。如图像简单，颜色较少易出现色块。","level":5},{"line":30,"heading":"PNG 无损压缩 适合有规律渐变色彩的图像","level":5},{"line":32,"heading":"GIF 只支持颜色少图像小的图片","level":5},{"line":34,"heading":"TIFF定义了四种不同的格式类型","level":5},{"line":38,"heading":"Pillow图像处理库","level":2},{"line":44,"heading":"img=Image.open(\"路径\")","level":5},{"line":46,"heading":"img.save(\"路径\")  更改后缀名可以转换格式","level":5},{"line":48,"heading":"img.format 查看图像格式       img.size 查看图像尺寸       img.mode 色彩模式","level":5},{"line":50,"heading":"plt.imshow（image对象/Numpy数组）","level":5},{"line":60,"heading":"转化图像的色彩模式","level":3},{"line":62,"heading":"转化图像色彩模式   img.convert(\"色彩模式\")","level":5},{"line":76,"heading":"img.spilt()   颜色通道的分离","level":5},{"line":93,"heading":"Image.merge()  图像通道合并","level":5},{"line":101,"heading":"图像转化为数组","level":2},{"line":103,"heading":"np.array(imag对象)  //将imag中每个像素点转换为数组形式","level":5},{"line":111,"heading":"img.resize(尺寸)  重塑img的尺寸","level":5},{"line":113,"heading":"img.tranpose(旋转方式)","level":5},{"line":123,"heading":"img.crop((x0,y0,x1,y1))  裁剪  x0 y0为裁剪矩形的左下角    x1 y1为右上角","level":5}]},"a48d10b538b5309737aeafc824f8ba53cc6db2a60092e0a0eb4c008601a74154":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"numpy","level":1},{"line":4,"heading":"创建数组","level":2},{"line":17,"heading":"创建特殊的数组","level":3},{"line":19,"heading":"np.arange(起始数字，结束数字，步长=1，dtype)  创建数字序列数组","level":4},{"line":21,"heading":"np.ones(shape,dtype)  创建一个全为1的数组","level":4},{"line":28,"heading":"np.zeros()  创建一个全为0的数组","level":4},{"line":30,"heading":"np.eye(shape)  创建一个单位矩阵","level":4},{"line":42,"heading":"np.linspace(起始数字，结束数字，元素个数)  创建一个等差数列","level":4},{"line":44,"heading":"np.logspace(起始指数，结束指数，元素个数，步长)  创建一个等比数列","level":4},{"line":53,"heading":"注意asaray与array的区别","level":4},{"line":55,"heading":"数组的运算","level":2},{"line":57,"heading":"reshape（shape） 和  resize(shape)","level":4},{"line":66,"heading":"两数组形状相同时可以进行基本运算","level":4},{"line":68,"heading":"a为一维数组，b为多维数组。满足a可以拓展成b的形状，也可运算","level":4},{"line":78,"heading":"矩阵运算","level":3},{"line":80,"heading":"a*b为上述基本运算法则","level":4},{"line":82,"heading":"np.matmul(a,b) 实现a,b矩阵的矩阵运算","level":4},{"line":95,"heading":"np.transpose（A） 对A矩阵进行转置运算","level":4},{"line":97,"heading":"np.linalg.inv(B)  对矩阵B进行求逆运算","level":4},{"line":99,"heading":"数组元素之间的运算","level":3},{"line":101,"heading":"np.sum(a)  对数组a中所有元素求和","level":4},{"line":133,"heading":"np.prod(a,axis)求所有元素的积","level":4},{"line":135,"heading":"np.diff()  求相邻元素直接的差","level":4},{"line":137,"heading":"np.sqrt()  计算个元素的平方根","level":4},{"line":139,"heading":"np.exp()  计算各元素的指数值","level":4},{"line":141,"heading":"np.abs()  计算个元素的绝对值","level":4},{"line":143,"heading":"np.stack((数组1，数组2，....), axis)","level":4},{"line":163,"heading":"np.matrix()是一个矩阵类型","level":4},{"line":173,"heading":"numpy.random  随机数模块","level":2},{"line":175,"heading":"np.random.rand(shape)  产生[0,1)区间的均匀分布数组，浮点数","level":4},{"line":177,"heading":"np.random.uniform(low,high,size)  产生[low,high）均匀分布数组，浮点数","level":4},{"line":179,"heading":"np.random.randint(low,high,size)   同上，整型","level":4},{"line":181,"heading":"np.random.normal(均值，方差，shape)  产生正态分布随机数","level":4},{"line":183,"heading":"np.random.randn(shape)  产生标准正态分布，浮点数","level":4},{"line":185,"heading":"np.random.seed（n）可以设置随机种子，仅一次有效，随机种子一样则产生的随机数一样。","level":3},{"line":187,"heading":"np.random.shufffle(arry) 随机打乱数组，对于多维数组他只会打乱第一维","level":4}]},"d129fefa501c916eb9efb0193a4a41c45ddac8d57ced420d1974d49bb83c78d3":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"编码原理记录","level":1},{"line":2,"heading":"utf-8","level":2}]},"2ef33a07510610acfbfd94841aecc196dfe3608b81c9d8b869cebfeb390d4612":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Matplotlib","level":1},{"line":2,"heading":"figure对象","level":2},{"line":22,"heading":"subplot（）对创建的空画布划分子图","level":2},{"line":33,"heading":"添加标题","level":2},{"line":58,"heading":"散点图scatter（）","level":2},{"line":80,"heading":"折线图plot（） 柱状图bar（）","level":2}]},"3b3728b97c2d1d66ce584180bffe7d7d82a0f1a9ddf5a057ebea7296f9786416":{"links":[],"embeds":[],"tags":[],"headings":[{"line":2,"heading":"Tensorflow2.0","level":1},{"line":6,"heading":"检查电脑CPU GPU可调用情况","level":2},{"line":21,"heading":"tf.constant(value,dtype,shape)  用来创建张量  dtype用于指定数据类型","level":5},{"line":23,"heading":"tf.cast(tensor量，数据类型)   用来修改tensor量的dtype值（只能由高精度向低精度转化）","level":5},{"line":35,"heading":"tf.convert_to_tensor()也可用于创建张量","level":5},{"line":37,"heading":"tf.is_tensor(value) 可以判断一个数据类型是否是一个张量","level":5},{"line":39,"heading":"istance（value, tf.Tensor) 也可以用来判断数据类型","level":5},{"line":41,"heading":"张量的提取","level":3},{"line":43,"heading":"tf.gather(Tensor,indinces=)  indices=是一个索引值，提取Tensor张量中这些索引的值","level":5},{"line":45,"heading":"tf.gather_nd(Tensor, indices=) 这个函数可以提取多维张量","level":5},{"line":60,"heading":"张量的运算（要求两个张量各个元素类型相同）","level":3},{"line":74,"heading":"tensorflow中重载了大部分运算方法如加减乘除等，不建议使用。","level":5},{"line":76,"heading":"当张量和np数组一同运算时，若使用的是tf中的方法则np变为张量。当使用了np中的方法则张量变为np数组","level":5},{"line":78,"heading":"多维张量的矩阵乘法","level":2},{"line":82,"heading":"tensorflow的自动求导机制","level":2},{"line":84,"heading":"可训练变量Variable","level":3},{"line":101,"heading":"自动求导——GradientTape","level":3},{"line":129,"heading":"实现二次求导","level":5},{"line":149,"heading":"tf.reduce_XXX()函数","level":2},{"line":151,"heading":"tf.reduce_mean(tensor,axis=,keepdims=, name=，keep_dims=)  求张量某一维度的平均值","level":5},{"line":170,"heading":"类似的函数还有    tf.reduce_sum()求和    tf,reduce_max()求最大值","level":5}]},"04fc91484f6e8c317c15c1d1fa37786f9086ca1f95b431445da53136b755ffcd":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"梯度下降算法","level":1},{"line":2,"heading":"梯度下降算法的原理","level":3},{"line":4,"heading":"对于一元的凸函数","level":4},{"line":12,"heading":"对于多元的凸函数","level":4},{"line":28,"heading":"梯度下降法解决一元线性回归问题","level":3},{"line":36,"heading":"梯度下降算法解决多元线性问题","level":3}]},"dd11f6725f07f91928e99d6ed393112a42c42f7727bff87b4f822f625ec5d19e":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"逻辑回归/分类问题","level":1},{"line":12,"heading":"对数几率函数","level":3},{"line":36,"heading":"sigmoid函数","level":3}]},"ed4d83c0bf7afc701c7915e9b5f20a503f23dedfd18731895c8c91b7d0a764c4":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"线性回归","level":1},{"line":2,"heading":"一元线性回归","level":3},{"line":6,"heading":"多元线性回归","level":3},{"line":10,"heading":"多元线性回归的原理","level":5},{"line":33,"heading":"广义的线性回归","level":2}]},"90ef052b125fe9a2b7e1608af9077fb855b2f9a52d374e6c9c8c4457d6946ff3":{"links":[{"line":0,"link":"逻辑回归分类问题","original":"[[逻辑回归分类问题]]","displayText":"","beforeContext":"","afterContext":""},{"line":26,"link":"Pillow","original":"[[Pillow]]","displayText":"","beforeContext":"train_images数据是6000张图片，图片格式是RGB  ，\t可以对图片数据归一化    详细介绍","afterContext":""}],"embeds":[],"tags":[],"headings":[{"line":2,"heading":"第一个逻辑回归程序","level":1},{"line":4,"heading":"引入各种库","level":6},{"line":15,"heading":"从keras.datasets下载数据集fashion_mnist","level":6},{"line":24,"heading":"数据归一化","level":6},{"line":35,"heading":"搭建网络层","level":6},{"line":47,"heading":"运行，预测，数据可视化","level":6}]}},"algorithmVersion":9}